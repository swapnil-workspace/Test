from reportlab.lib.pagesizes import letter
from reportlab.lib import colors
from reportlab.platypus import SimpleDocTemplate, Paragraph, PageBreak
from reportlab.lib.styles import getSampleStyleSheet, ParagraphStyle

# Create a custom document to add header and footer
class MyDocTemplate(SimpleDocTemplate):
    def __init__(self, filename, **kw):
        SimpleDocTemplate.__init__(self, filename, **kw)

    def beforePage(self):
        # Add the header to each page
        self.canvas.setFont('Helvetica', 12)
        self.canvas.drawString(40, 770, "My Custom Header - Page {}".format(self.page))
        
    def afterPage(self):
        # Add the footer to each page
        self.canvas.setFont('Helvetica', 10)
        self.canvas.drawString(40, 20, "My Custom Footer - Page {}".format(self.page))

# Create the PDF file and document
pdf_file = "output_with_unordered_list.pdf"
document = MyDocTemplate(pdf_file, pagesize=letter)

# Build the content of the PDF
content = []

# Define the list you want to convert into a bullet-pointed list
items = ['abc', 'def', 'xyz']

# Create a style for the list (using standard style)
styles = getSampleStyleSheet()
list_style = ParagraphStyle(name="ListStyle", fontSize=12, spaceBefore=6)

# Function to create an unordered list in Paragraph
def create_unordered_list(items):
    list_paragraphs = []
    for item in items:
        # Add bullet points (using a custom symbol for bullets)
        bullet_item = Paragraph(f"&#8226; {item}", list_style)  # &#8226; is the HTML character for a bullet
        list_paragraphs.append(bullet_item)
    return list_paragraphs

# Add the unordered list to content
unordered_list = create_unordered_list(items)

# Add all the list items (bullet points) to content
content.extend(unordered_list)

# Add a PageBreak if necessary (if you want to break between different sections or pages)
content.append(PageBreak())

# Build the document with the content
document.build(content)

print("PDF generated with unordered list successfully!")
