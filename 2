<!DOCTYPE html>
<html>
<head>
    <title>Dynamic PDF Report</title>
    <style>
        body { font-family: Arial, sans-serif; margin: 20px; }
        h1 { color: #333; }
        table { width: 100%; border-collapse: collapse; margin-top: 20px; }
        table, th, td { border: 1px solid #ddd; }
        th, td { padding: 8px; text-align: left; }
        th { background-color: #f2f2f2; }
    </style>
</head>
<body>
    <h1>Dynamic PDF Report</h1>
    <p>Date: {{ date }}</p>
    
    <h2>Details</h2>
    <table>
        <thead>
            <tr>
                <th>Name</th>
                <th>Amount</th>
                <th>Status</th>
            </tr>
        </thead>
        <tbody>
            {% for record in records %}
            <tr>
                <td>{{ record.name }}</td>
                <td>{{ record.amount }}</td>
                <td>{{ record.status }}</td>
            </tr>
            {% endfor %}
        </tbody>
    </table>
</body>
</html>





from jinja2 import Environment, FileSystemLoader

# Set up Jinja2 to load the template
env = Environment(loader=FileSystemLoader('templates'))  # assuming the template is in the "templates" folder
template = env.get_template('template.html')

# Render the HTML with dynamic data
html_output = template.render(data)



from xhtml2pdf import pisa

def generate_pdf(html_content, output_file="report.pdf"):
    # Open the output file in binary write mode
    with open(output_file, "wb") as pdf_file:
        # Convert the HTML to PDF
        pisa.CreatePDF(html_content, dest=pdf_file)

# Generate the PDF using the rendered HTML
generate_pdf(html_output)


from jinja2 import Environment, FileSystemLoader
from xhtml2pdf import pisa

# Data to be passed into the PDF template
data = {
    'date': 'January 5, 2025',
    'records': [
        {'name': 'John Doe', 'amount': '$1200', 'status': 'Paid'},
        {'name': 'Jane Smith', 'amount': '$900', 'status': 'Pending'},
        {'name': 'Alice Brown', 'amount': '$500', 'status': 'Paid'}
    ]
}

# Step 1: Set up Jinja2 to load the template
env = Environment(loader=FileSystemLoader('templates'))  # Assuming the template is inside "templates" folder
template = env.get_template('template.html')

# Step 2: Render the HTML with dynamic data
html_output = template.render(data)

# Step 3: Convert the rendered HTML to PDF using xhtml2pdf
def generate_pdf(html_content, output_file="report.pdf"):
    with open(output_file, "wb") as pdf_file:
        pisa.CreatePDF(html_content, dest=pdf_file)

# Generate the PDF using the rendered HTML
generate_pdf(html_output)

print("PDF generated successfully!")
